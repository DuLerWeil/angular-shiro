function AngularShiroConfigProvider(){this.options={login:{uri:"/api/authenticate",path:"index"},logout:{uri:"/api/logout",path:"logout"}},this.$get=[function(){return this.options}]}function AuthenticatorProvider(){var a="/api/authenticate";this.setUri=function(b){return a=b,this},this.setDelegate=function(a){return this.delegate=a,this},this.$get=["$q","$http","$timeout",function(b,c){return{authenticate:function(d){var e=b.defer(),f={principal:d?d.getPrincipal():null,credentials:d?d.getCredentials():null};return c.post(a,{token:f}).success(function(a){e.resolve(a)}).error(function(a){e.reject(a)}),e.promise}}}]}function UsernamePasswordToken(){this.username=null,this.password=null,this.getPrincipal=function(){return this.username},this.getCredentials=function(){return this.password}}function AuthenticationInfo(a,b){this.principal=a,this.credentials=b,this.getPrincipal=function(){return this.principal},this.getCredentials=function(){return this.credentials}}function Permission(a,b){this.WILDCARD_TOKEN="*",this.PART_DIVIDER_TOKEN="$",this.SUBPART_DIVIDER_TOKEN=",",this.caseSensitive=b|!1,this.parts,this.implies=function(a){var b=angular.isDefined(a)&&this.getParts().length>0;if(b){a=angular.isString(a)?new Permission(a):a;for(var c=a.getParts(),d=c.length,e=this.getParts(),f=0,g=e.length;g>f;f++){var h=e[f];if(d>f){var i=c[f];if(!this.containsWildCardToken(h)&&!this.containsAll(h,i)){b=!1;break}}else if(!this.containsWildCardToken(h)){b=!1;break}}}return b},this.containsAll=function(a,b){for(var c=!0,d=0;d<b.length;d++)if(-1==a.indexOf(b[d])){c=!1;break}return c},this.containsWildCardToken=function(a){return a.indexOf(this.WILDCARD_TOKEN)>-1},this.resolveParts=function(a,b){var c=new Array;if(angular.isDefined(a)&&angular.isString(a)){a=a.trim?a.trim():a;var d=a.split(this.PART_DIVIDER_TOKEN);angular.forEach(d,function(a){c.push(this.resolveSubParts(a,b))},this)}return c},this.resolveSubParts=function(a,b){var c=new Array,d=a.split(this.SUBPART_DIVIDER_TOKEN),e=0;return angular.forEach(d,function(a){a=a.trim?a.trim():a,a=0==b?angular.lowercase(a):a,c[e++]=a}),c},this.getParts=function(){return this.parts},this.parts=this.resolveParts(a,b)}function AuthorizationInfo(a,b){this.roles=angular.isArray(a)?a:new Array,this.permissions=angular.isArray(b)?b:new Array,this.getRoles=function(){return this.roles},this.getPermissions=function(){return this.permissions},this.getStringPermissions=function(){for(var a=new Array,b=0,c=this.permissions.length;c>b;b++){var d=this.permissions[b];angular.isString(d)&&a.push(d)}return a},this.getObjectPermissions=function(){for(var a=new Array,b=0,c=this.permissions.length;c>b;b++){var d=this.permissions[b];d instanceof Permission&&a.push(d)}return a}}function Authorizer(){this.permissions,this.authorizationInfo,this.setAuthorizationInfo=function(a){if(!(a&&null!=a&&a instanceof AuthorizationInfo))throw{"illegalArgumï¿½entException":"invalid value for authorizationInfo"};this.authorizationInfo=a,this.permissions=this.getPermissions(a)},this.clear=function(){this.authorizationInfo=this.permissions=null},this.isPermitted=function(a){var b;return angular.isArray(a)?(b=new Array,angular.forEach(a,function(a){b.push(this.isObjectPermissionPermitted(this.resolvePermission(a)))},this)):b=this.isObjectPermissionPermitted(this.resolvePermission(a)),b},this.isPermittedAll=function(a){return-1==this.isPermitted(a).indexOf(!1)},this.hasRole=function(a){var b=!1;return a&&(b=this.authorizationInfo.getRoles().indexOf(a)>-1),b},this.hasRoles=function(a){var b=new Array;return a&&angular.isArray(a)&&angular.forEach(a,function(a){b.push(this.hasRole(a))},this),b},this.hasAllRoles=function(a){return-1==this.hasRoles(a).indexOf(!1)},this.getPermissions=function(a){for(var b=a.getObjectPermissions(),c=a.getStringPermissions(),d=0,e=c.length;e>d;d++)b.push(new Permission(c[d]));return b},this.isObjectPermissionPermitted=function(a){for(var b=!1,c=0,d=this.permissions.length;d>c&&!b;c++)b=this.permissions[c].implies(a);return b},this.resolvePermission=function(a){return angular.isString(a)?new Permission(a):a}}function AuthenticationResponseParser(){this.parse=function(a){return this.checkValidity(a),{authc:this.parseAuthc(a.info.authc),authz:this.parseAuthz(a.info.authz)}},this.parseAuthc=function(a){return new AuthenticationInfo(a.principal,a.credentials)},this.parseAuthz=function(a){return new AuthorizationInfo(a.roles,a.permissions)},this.checkValidity=function(a){if(!(angular.isDefined(a)&&angular.isDefined(a.info)&&this.isAuthcValid(a.info)&&this.isAuthzValid(a.info))){var b="Authentication response must comply with the following structure\n\n";throw b+=this.responseStructureDescription(),{name:"ParseException",message:b}}},this.isAuthcValid=function(a){var b=angular.isDefined(a.authc);if(b){var c=a.authc;b=angular.isDefined(c.principal)&&angular.isDefined(c.credentials)}return b},this.isAuthzValid=function(a){var b=angular.isDefined(a.authz);if(b){var c=a.authz;b=angular.isDefined(c.roles)&&angular.isDefined(c.permissions)}return b},this.responseStructureDescription=function(){var a='{\n  "info": {\n    "authc": {\n      "principal": "Subject\'s principal",\n      "credentials": {\n        Object which properties are Subject\'s credentials\n      },\n    "authz": {\n        "roles" : Array of the Suject\'s roles,\n        "permissions" : Array of the Subject\'s permissions\n    }\n  }\n}';return a+="\n\n Following is an example of an authentication response \n\n",a+='{\n  "info": {\n    "authc": {\n      "principal": "edegas",\n      "credentials": {\n        "name": "Edgar Degas",\n        "login": "edegas",\n        "email": "edegas@mail.com"\n      }\n    },\n    "authz": {\n        "roles" : ["ADMIN", "DEVELOPPER"],\n        "permissions" : ["address$*", "book$view", ...]\n    }\n  }\n}'}}function Subject(a,b,c){this.authenticated=!1,this.authorizer=b,this.authenticationInfo,this.login=function(b){var d=a.authenticate(b),e=this;return d.then(function(a){var d=c.parse(a);e.authenticationInfo=d.authc,e.authorizer.setAuthorizationInfo(d.authz),e.authenticated=!0,b.username=null,b.password=null},function(){this.clear()}),d},this.logout=function(){this.clear()},this.clear=function(){this.authenticated=!1,this.authenticationInfo=null,this.authorizer.clear()},this.getSession=function(){},this.getPrincipal=function(){var a="";return angular.isDefined(this.authenticationInfo)&&angular.isObject(this.authenticationInfo)&&(a=this.authenticationInfo.getPrincipal()),a},this.isAuthenticated=function(){return this.authenticated},this.hasRole=function(a){return this.isAuthenticated()&&angular.isDefined(this.authorizer)&&this.authorizer.hasRole(a)},this.hasRoles=function(a){var b=new Array;return angular.forEach(a,function(a){b.push(this.hasRole(a))},this),b},this.hasAllRoles=function(a){return this.isAuthenticated()&&this.authorizer.hasAllRoles(a)},this.isPermitted=function(a){return this.isAuthenticated()&&this.authorizer.isPermitted(a)},this.isPermittedAll=function(a){return this.isAuthenticated()&&this.authorizer.isPermittedAll(a)}}function getBlockElements(a){var b=a[0],c=a[a.length-1];if(b===c)return angular.element(b);var d=b,e=[d];do{if(d=d.nextSibling,!d)break;e.push(d)}while(d!==c);return angular.element(e)}angular.module("angularShiro.templates",["templates/usernamePasswordForm.html"]),angular.module("templates/usernamePasswordForm.html",[]).run(["$templateCache",function(a){a.put("templates/usernamePasswordForm.html",'<div>\n	<div style="padding-top: 10px; padding-bottom: 10px;"\n		data-ng-show="error">\n		<span class="label label-danger label-important"\n			data-ng-bind="labels[\'connection.denied.message\']"> </span>\n	</div>\n	<form name="loginForm" data-role="form" data-ng-submit="submit()"\n		novalidate>\n		<div class="form-group">\n			<input name="username" type="text" class="form-control"\n				placeholder="{{labels[\'field.username.placeholder\']}}"\n				data-ng-model="token.username" required />\n		</div>\n		<div class="form-group">\n			<input name="password" type="password" class="form-control"\n				placeholder="{{labels[\'field.password.placeholder\']}}"\n				data-ng-model="token.password" required />\n		</div>\n		<div class="form-group">\n			<button type="submit" class="btn btn-primary btn-block"\n				data-ng-disabled="loginForm.$pristine || loginForm.$invalid">\n				<span data-ng-bind="labels[\'button.submit.label\']"></span>\n			</button>\n		</div>\n	</form>\n</div>')}]);var authenticatedDirective=["subject","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){var h,i,j;c.$watch("subject.authenticated",function(){a.isAuthenticated()?i||(i=c.$new(),g(i,function(a){h={clone:a},b.enter(a,d.parent(),d)})):(j&&(j.remove(),j=null),i&&(i.$destroy(),i=null),h&&(j=getBlockElements(h.clone),b.leave(j,function(){j=null}),h=null))})}}}],hasAnyRoleDirective=["subject","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){var h,i,j;c.$watch(e.hasAnyRole,function(f){f=angular.isUndefined(f)?e.hasAnyRole:f,f=angular.isArray(f)?f:[f],a.hasRoles(f).indexOf(!0)>-1?i||(i=c.$new(),g(i,function(a){h={clone:a},b.enter(a,d.parent(),d)})):(j&&(j.remove(),j=null),i&&(i.$destroy(),i=null),h&&(j=getBlockElements(h.clone),b.leave(j,function(){j=null}),h=null))})}}}],hasPermissionDirective=["subject","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){var h,i,j;c.$watch(e.hasPermission,function(f){f=angular.isUndefined(f)?e.hasPermission:f,a.isPermitted(f)?i||(i=c.$new(),g(i,function(a){h={clone:a},b.enter(a,d.parent(),d)})):(j&&(j.remove(),j=null),i&&(i.$destroy(),i=null),h&&(j=getBlockElements(h.clone),b.leave(j,function(){j=null}),h=null))})}}}],hasRoleDirective=["subject","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){var h,i,j;c.$watch(e.hasRole,function(f){f=angular.isUndefined(f)?e.hasRole:f,a.hasRole(f)?i||(i=c.$new(),g(i,function(a){h={clone:a},b.enter(a,d.parent(),d)})):(j&&(j.remove(),j=null),i&&(i.$destroy(),i=null),h&&(j=getBlockElements(h.clone),b.leave(j,function(){j=null}),h=null))})}}}],lacksPermissionDirective=["subject","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){var h,i,j;c.$watch(e.lacksPermission,function(f){f=angular.isUndefined(f)?e.lacksPermission:f,a.isPermitted(f)?(j&&(j.remove(),j=null),i&&(i.$destroy(),i=null),h&&(j=getBlockElements(h.clone),b.leave(j,function(){j=null}),h=null)):i||(i=c.$new(),g(i,function(a){h={clone:a},b.enter(a,d.parent(),d)}))})}}}],lacksRoleDirective=["subject","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){var h,i,j;c.$watch(e.lacksRole,function(f){f=angular.isUndefined(f)?e.lacksRole:f,a.hasRole(f)?(j&&(j.remove(),j=null),i&&(i.$destroy(),i=null),h&&(j=getBlockElements(h.clone),b.leave(j,function(){j=null}),h=null)):i||(i=c.$new(),g(i,function(a){h={clone:a},b.enter(a,d.parent(),d)}))})}}}],notAuthenticatedDirective=["subject","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){var h,i,j;c.$watch("subject.authenticated",function(){a.isAuthenticated()?(j&&(j.remove(),j=null),i&&(i.$destroy(),i=null),h&&(j=getBlockElements(h.clone),b.leave(j,function(){j=null}),h=null)):i||(i=c.$new(),g(i,function(a){h={clone:a},b.enter(a,d.parent(),d)}))})}}}],principalDirective=["subject",function(a){return{restrict:"E",replace:!0,scope:{},template:'<span class="principal" ng-bind="getPrincipal()"></span>',link:function(b,c,d){b.getPrincipal=function(){var b=a.getPrincipal();return angular.isObject(b)&&(b=d.property&&angular.isDefined(b[d.property])?b[d.property]:angular.toJson(b)),b}}}}],usernamePasswordFormDirective=["subject","usernamePasswordToken",function(a,b){var c={"field.username.placeholder":"Username","field.password.placeholder":"Password","button.submit.label":"Connection","connection.denied.message":"Username and password do not match"};return{restrict:"E",replace:!0,templateUrl:"templates/usernamePasswordForm.html",scope:{onSuccess:"&",onError:"&"},link:function(d,e,f){d.error=!1,d.token=b,d.labels=angular.isDefined(f.labels)?angular.extend(c,angular.fromJson(f.labels)):c,d.$watch("token.getPrincipal()",function(){d.error=!1}),d.$watch("token.getCredentials()",function(){d.error=!1}),d.submit=function(){a.login(b).then(function(a){angular.isDefined(d.onSuccess)&&d.onSuccess({data:a}),b.username=b.password=null},function(a){d.error=!0,angular.isDefined(d.onError)&&d.onError({data:a})})}}}}];angular.module("angularShiro.services",[]).provider("authenticator",AuthenticatorProvider).provider("angularShiroConfig",AngularShiroConfigProvider).factory("subject",["authenticator","authorizer","authenticationResponseParser",function(a,b,c){return new Subject(a,b,c)}]).factory("usernamePasswordToken",function(){return new UsernamePasswordToken}).factory("authorizer",function(){return new Authorizer}).factory("authenticationResponseParser",function(){return new AuthenticationResponseParser});var directives={hasRole:hasRoleDirective,notAuthenticated:notAuthenticatedDirective,authenticated:authenticatedDirective,lacksRole:lacksRoleDirective,hasAnyRole:hasAnyRoleDirective,hasPermission:hasPermissionDirective,lacksPermission:lacksPermissionDirective,principal:principalDirective,usernamePasswordForm:usernamePasswordFormDirective},moduleDirectives=angular.module("angularShiro.directives",[]);for(var name in directives)moduleDirectives.directive(name,directives[name]);angular.module("angularShiro",["angularShiro.services","angularShiro.directives","angularShiro.templates"]);